{
//  https://eslint.org/docs/rules/ - тут валяються все настройки
    "env": {
    "browser": true,
        "es6": true,
        "node": true
},
//  "extends": "eslint:recommended", // включены рекомендованные правила которые сообщают о частых ощшибках
    "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module"
    },

    "rules": {
    "indent": [2, "tab"],
    "linebreak-style": [2, "windows"],
    "quotes": [2, "double", { "avoidEscape": true,"allowTemplateLiterals": true }],
    "semi": [2, "always",{"omitLastInOneLineBlock": false}],
    "comma-spacing":[ 2,{ "before": true, "after": true }],
    "strict": [2, "global"],
    "for-direction": [2], //смотрет что бы мы не свалились в вечный цикл в fore
    "getter-return": [2, { "allowImplicit": true }], // геттерное свойство должно либо возвращать явное значение, либо явно возвращать undefined
     "no-cond-assign": [2, "always"],   // запрещает в условиях операто =
     "no-debugger": [2],
     "no-dupe-args": [2], //запрещает дублировать параметры в функции
     "no-dupe-else-if": [2],
     "no-dupe-keys": [2],
     "no-duplicate-case": [2] ,// запрещает дубливровать case в switch
     "no-empty": [2, { "allowEmptyCatch": true }],//запрещает пустые блоки кода
     "no-ex-assign": [2],//запрещает менять в cathe объект ошибки
     "no-extra-boolean-cast": [2],//запрещает использовать !!! и т.д.
     "no-extra-semi": [2], // убирает повторяющиеся точки с запятой
     "no-func-assign": [2], // не разрешает дублировать декларации функций
     "no-import-assign": [2], //запрешает переназначать переменные прописанные в import
     "no-inner-declarations": [2, "both"], // запрещает дкларировать функции и var  внутри if
     "no-invalid-regexp": [2, { "allowConstructorFlags": ["u", "y"] }],
     "no-irregular-whitespace":[2],//запрещает в коде управляющие символы
     "no-misleading-character-class":[2],
     "no-obj-calls":[2],//запроещает вызывать глобальные объекты
     "no-prototype-builtins" :[2],//запрещает вызов методов Object.prototype в неявном виде
     "no-regex-spaces":[2],
     "no-setter-return": [2], //запрещает возвращать значения из сеттеров
     "no-sparse-arrays": [2], //запрещает масивы вот такие [,,]
     "no-unexpected-multiline": [2], //запрещает выражения размазывать на несколько строк
     "no-unreachable": [2], //запрещает код после return и подобных ...
     "no-unsafe-finally":[2],//запрещает  return, throw, break, and continue в finally
     "no-unsafe-negation":[2], // запрещает  if (!key in object)
     "use-isnan":[2],
     "valid-typeof":[2, { "requireStringLiterals": true }],// incorrect typeof foo === "strnig"; correct typeof foo === "string"
     "array-callback-return": [2, { "allowImplicit": true }], //из методов масива явно возвращай чего нибудь
     "block-scoped-var": [2], // пиши var с учетом хойстинга, в if их не засовывай, они хойстятся от туда и это не явно может тебя тормознуть
     "complexity": [2, 3], // цикломатическая сложность функции - максимальное колличество вариантов ветвления функции
     "curly": [2], // необходимо использовать фигурные скобки в условиях
     "default-param-last": [2], // параметры по умолчанию должны идти последними
     "dot-location": [2], // точка на одно линии с объектом, свойство переносится на след строку
     "dot-notation": [2], //запрещает доступ к свойству через obj["bla"] и переводит такую нотацию в точечную obj.bla
     "eqeqeq": [2, "always"], // требует всегда юзать === вместо ==
     "grouped-accessor-pairs": [2], // группируем сетторы и геттеры рядом друг с другом
     "max-classes-per-file": [2, 1], //определяет максимальное число class defenition на один файл
     "no-caller": [2], // запрещает использоваьть метод caller
     "no-case-declarations":[2], //запрещает лексические дикларации внутри swich  - case, defaulft
     "no-else-return": [2], //запрещает корявые returnы в else  и else if
     "no-empty-function": [2],//запрещает пустые функции без коментариев
     "no-empty-pattern": [2], //запрещает пустую деструктуризацию
     "no-eq-null": [2], // предупреждает о не строгом сравнении null с чем либо
     "no-eval": [2],
     "no-extra-bind":[2], // убирает ненужные баинды
     "no-extra-label": [2], // убирает ненужные метки
     "no-fallthrough" : [2], // предупреждает о возможных ошибках в case
     "no-floating-decimal": [2], // запрещает цифры с плавающей точкой
     "no-global-assign": [2], // запрещает переприсваивание нативных объектов и нативных глобальных пременных
     "no-implicit-coercion": [2], // запрещает неявное преобразование данных например var s = "" + foo; переделает в var s = String(foo);
     "no-magic-numbers": [2, { "ignore": [0,1,2],"ignoreArrayIndexes": true, "enforceConst": true }], // запрещает использовать магические числа
     "no-multi-spaces": [2], // удаляет лишние пробелы
     "no-multi-str": [2], //  запрещает мультистрочные строки
     "no-new": [2], // запрещает new без сохранения результата в переменную
     "no-octal": [2], //запрещает восмиричные литералы
     "no-redeclare": [2], // запрещает использовать редикларацию
     "no-script-url": [2], // запрещает юзать javascript:
     "no-self-assign":  [2]// запрещает самоприсваивание а=а
    }
}